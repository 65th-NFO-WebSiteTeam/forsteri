{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kaito\\\\Desktop\\\\Coding\\\\NF\\\\forsteri\\\\forsteri-front\\\\src\\\\auth\\\\pages\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { login } from '../api/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginForm = () => {\n  _s();\n  const initialState = {\n    username: '',\n    password: ''\n  };\n  const [formData, setFormData] = useState(initialState);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleLogin = token => {\n    // Handle successful login (e.g., save token to local storage, update app state)\n    console.log('Login successful');\n    // Do something with the token (e.g., save it to local storage)\n    localStorage.setItem('token', token);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    login(formData).then(data => {\n      const token = data.token;\n      handleLogin(token);\n    }).catch(error => {\n      console.error('Failed to login:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"csrfmiddlewaretoken\",\n        value: csrfToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"T4yXvXp9ZUeg/I2tM6GijGKf8Os=\");\n_c = LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","login","jsxDEV","_jsxDEV","LoginForm","_s","initialState","username","password","formData","setFormData","handleChange","e","target","name","value","handleLogin","token","console","log","localStorage","setItem","handleSubmit","preventDefault","then","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","csrfToken","_c","$RefreshReg$"],"sources":["C:/Users/kaito/Desktop/Coding/NF/forsteri/forsteri-front/src/auth/pages/LoginForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { login } from '../api/auth';\r\n\r\nexport const LoginForm = () => {\r\n  const initialState = {\r\n    username: '',\r\n    password: '',\r\n  };\r\n\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleLogin = (token) => {\r\n    // Handle successful login (e.g., save token to local storage, update app state)\r\n    console.log('Login successful');\r\n    // Do something with the token (e.g., save it to local storage)\r\n    localStorage.setItem('token', token);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    login(formData)\r\n      .then((data) => {\r\n        const token = data.token;\r\n        handleLogin(token);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Failed to login:', error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Login Form</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Username:\r\n          <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <label>\r\n          Password:\r\n          <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} />\r\n        </label>\r\n        <br />\r\n        <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrfToken} /> {/* Include CSRF token */}\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}