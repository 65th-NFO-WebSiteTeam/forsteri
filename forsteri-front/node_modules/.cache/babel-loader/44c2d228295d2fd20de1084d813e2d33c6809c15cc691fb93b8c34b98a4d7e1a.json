{"ast":null,"code":"export const signup = async userData => {\n  const res = await fetch('http://localhost:8000/auth/signup/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('token')}` // JWTトークンをヘッダーに設定\n    },\n\n    body: JSON.stringify(userData)\n  });\n  const data = await res.json();\n  if (res.ok) {\n    const token = data.access;\n    localStorage.setItem('token', `Bearer ${token}`); // トークンをローカルストレージに保存\n  }\n\n  return data;\n};\nexport const login = async credentials => {\n  const res = await fetch('http://localhost:8000/auth/login/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  });\n  if (res.ok) {\n    const data = await res.json();\n    const token = data.access;\n    localStorage.setItem('token', `Bearer ${token}`); // トークンをローカルストレージに保存\n    return data;\n  } else {\n    const errorData = await res.json();\n    throw errorData; // エラーレスポンスをスローする\n  }\n};\n\nexport const logout = async () => {\n  const res = await fetch('http://localhost:8000/auth/logout/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem('token')}` // JWTトークンをヘッダーに設定\n    }\n  });\n\n  return await res.json();\n};","map":{"version":3,"names":["signup","userData","res","fetch","method","headers","localStorage","getItem","body","JSON","stringify","data","json","ok","token","access","setItem","login","credentials","errorData","logout"],"sources":["C:/Users/kaito/Desktop/Coding/NF/forsteri/forsteri-front/src/auth/api/auth.js"],"sourcesContent":["export const signup = async (userData) => {\r\n  const res = await fetch('http://localhost:8000/auth/signup/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`, // JWTトークンをヘッダーに設定\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n\r\n  const data = await res.json();\r\n\r\n  if (res.ok) {\r\n    const token = data.access;\r\n    localStorage.setItem('token', `Bearer ${token}`); // トークンをローカルストレージに保存\r\n  }\r\n\r\n  return data;\r\n};\r\n\r\nexport const login = async (credentials) => {\r\n  const res = await fetch('http://localhost:8000/auth/login/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(credentials),\r\n  });\r\n\r\n  if (res.ok) {\r\n    const data = await res.json();\r\n    const token = data.access;\r\n    localStorage.setItem('token', `Bearer ${token}`); // トークンをローカルストレージに保存\r\n    return data;\r\n  } else {\r\n    const errorData = await res.json();\r\n    throw errorData; // エラーレスポンスをスローする\r\n  }\r\n};\r\n\r\nexport const logout = async () => {\r\n  const res = await fetch('http://localhost:8000/auth/logout/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${localStorage.getItem('token')}`, // JWTトークンをヘッダーに設定\r\n    },\r\n  });\r\n\r\n  return await res.json();\r\n};\r\n\r\n\r\n  "],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAG,MAAOC,QAAQ,IAAK;EACxC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC,CAAE;IAC9D,CAAC;;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;EAEF,MAAMU,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,CAAC;EAE7B,IAAIV,GAAG,CAACW,EAAE,EAAE;IACV,MAAMC,KAAK,GAAGH,IAAI,CAACI,MAAM;IACzBT,YAAY,CAACU,OAAO,CAAC,OAAO,EAAG,UAASF,KAAM,EAAC,CAAC,CAAC,CAAC;EACpD;;EAEA,OAAOH,IAAI;AACb,CAAC;AAED,OAAO,MAAMM,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,MAAMhB,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDG,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACQ,WAAW;EAClC,CAAC,CAAC;EAEF,IAAIhB,GAAG,CAACW,EAAE,EAAE;IACV,MAAMF,IAAI,GAAG,MAAMT,GAAG,CAACU,IAAI,CAAC,CAAC;IAC7B,MAAME,KAAK,GAAGH,IAAI,CAACI,MAAM;IACzBT,YAAY,CAACU,OAAO,CAAC,OAAO,EAAG,UAASF,KAAM,EAAC,CAAC,CAAC,CAAC;IAClD,OAAOH,IAAI;EACb,CAAC,MAAM;IACL,MAAMQ,SAAS,GAAG,MAAMjB,GAAG,CAACU,IAAI,CAAC,CAAC;IAClC,MAAMO,SAAS,CAAC,CAAC;EACnB;AACF,CAAC;;AAED,OAAO,MAAMC,MAAM,GAAG,MAAAA,CAAA,KAAY;EAChC,MAAMlB,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE,EAAC,CAAE;IAC9D;EACF,CAAC,CAAC;;EAEF,OAAO,MAAML,GAAG,CAACU,IAAI,CAAC,CAAC;AACzB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}